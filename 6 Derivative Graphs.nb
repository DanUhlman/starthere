(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    208190,       4265]
NotebookOptionsPosition[    201126,       4100]
NotebookOutlinePosition[    201500,       4116]
CellTagsIndexPosition[    201457,       4113]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Derivative Graphs", "Title",
 CellChangeTimes->{{3.7077536981176867`*^9, 
  3.707753700923683*^9}},ExpressionUUID->"addc02d8-9403-4bf9-ae5c-\
f542843a997c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Given ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", " ", 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "414ce45c-b20e-4199-896c-7eaf7a382951"],
 " graph, find/create ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", "\[Prime]",
    MultilineFunction->None], TraditionalForm]],ExpressionUUID->
  "bde2d321-afa2-494e-9aaf-b29aa98ab02b"],
 " graph"
}], "Section",
 CellChangeTimes->{{3.707753735062687*^9, 3.7077537762821236`*^9}, {
  3.7077815146746264`*^9, 
  3.707781536223935*^9}},ExpressionUUID->"0d5d45cc-cb1d-436b-8955-\
b7e6cd1f014b"],

Cell[TextData[{
 "Consider the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "008a6a8a-bc78-43d7-a420-448bae7173ba"],
 " shown below. "
}], "Text",
 CellChangeTimes->{{3.7077568831849785`*^9, 3.707756900891713*^9}, {
  3.7077589034850273`*^9, 3.707758917833605*^9}, {3.7077797376698613`*^9, 
  3.707779743386916*^9}},ExpressionUUID->"5f3ea941-e425-4b06-9651-\
762ecf9f57c5"],

Cell["\<\
Use the slider and notice how the slope changes. Make a special note where \
the slope (derivative) is zero, positive, or negative:\
\>", "Item",
 CellChangeTimes->{{3.7077579859121323`*^9, 3.707758058140542*^9}, {
  3.7077581054742813`*^9, 
  3.707758106075677*^9}},ExpressionUUID->"25cade33-0006-4210-abd9-\
b8f61275d589"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "3"}], ")"}], 
     SuperscriptBox["x", "3"]}], "-", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"3", "x"}], "+", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "a", "]"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "'"}], "[", "a", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"x", "-", "a"}], ")"}]}]}], ",", 
       RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "8"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", ".015", "]"}], ",", 
        RowBox[{"Point", "@", 
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{"f", "[", "a", "]"}]}], "}"}]}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "2.2"}], ",", "4.5"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7077553674074244`*^9, 3.707755452366104*^9}, {
   3.707755500468278*^9, 3.7077555966525154`*^9}, {3.707755773339489*^9, 
   3.707755785575733*^9}, {3.7077558310565057`*^9, 3.7077558347913094`*^9}, {
   3.7077561711207714`*^9, 3.707756241526266*^9}, 3.707756293882594*^9, {
   3.7077567141326065`*^9, 3.7077567147941866`*^9}, {3.7077568504588666`*^9, 
   3.7077568599315033`*^9}, 3.707757215665368*^9, {3.707757598242122*^9, 
   3.7077576043443213`*^9}},ExpressionUUID->"d8096419-93eb-4f76-9056-\
a74fced85b34"],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`a$$ = -2.2, Typeset`show$$ = True, 
      Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`a$$], -2.2, 4.5}}, Typeset`size$$ = {
      540., {167., 175.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = False, $CellContext`a$8449$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, "Variables" :> {$CellContext`a$$ = -2.2}, 
        "ControllerVariables" :> {
          Hold[$CellContext`a$$, $CellContext`a$8449$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        Plot[{$CellContext`f[$CellContext`a$$] + 
           Derivative[
             1][$CellContext`f][$CellContext`a$$] ($CellContext`x - \
$CellContext`a$$), 
           $CellContext`f[$CellContext`x]}, {$CellContext`x, -3, 5}, 
          PlotRange -> {-5, 8}, PlotStyle -> {Red, Blue}, Epilog -> {Red, 
            PointSize[0.015], 
            Point[{$CellContext`a$$, 
              $CellContext`f[$CellContext`a$$]}]}], 
        "Specifications" :> {{$CellContext`a$$, -2.2, 4.5}}, "Options" :> {}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{612., {233., 243.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>({$CellContext`f[
           Pattern[$CellContext`x, 
            Blank[]]] := (1/3) $CellContext`x^3 - $CellContext`x^2 - 
          3 $CellContext`x + 6, 
         Attributes[Derivative] = {NHoldAll, ReadProtected}}; 
       Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{3.7077562429395227`*^9, 3.70775627571762*^9, 
  3.7077567166834993`*^9, 3.7077569141418095`*^9, 3.707757216783655*^9, 
  3.707757616211981*^9, 3.7077580691826096`*^9, 
  3.7080033183959303`*^9},ExpressionUUID->"dcaffefa-ec39-4396-893d-\
702e9121acf7"]
}, {2}]],

Cell[TextData[{
 "Below is the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f13961a1-1ae6-4f5d-b48a-8d4545a83f46"],
 " along with the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "560a93b2-2d87-40ec-94c0-3b5c4d04e602"],
 "."
}], "Text",
 CellChangeTimes->{{3.7077582723980455`*^9, 
  3.707758302224372*^9}},ExpressionUUID->"357e5c42-d489-4f96-b937-\
85c3ecdbd237"],

Cell["Complete the following statements:", "Item",
 CellChangeTimes->{{3.7077581119609647`*^9, 3.7077581152082653`*^9}, {
  3.7077581832409754`*^9, 3.7077581858663607`*^9}, {3.707758251026846*^9, 
  3.7077582644050055`*^9}, {3.707758305860751*^9, 3.707758308008428*^9}, {
  3.7077584312967362`*^9, 3.707758447702386*^9}, {3.7077584896405926`*^9, 
  3.707758501186844*^9}},ExpressionUUID->"aaf4e503-49ce-47ef-890f-\
2bb0964417f7"],

Cell[TextData[{
 "When the tangent line to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6867a843-0e92-40f7-9034-93e305735752"],
 " is \[OpenCurlyDoubleQuote]flat,\[CloseCurlyDoubleQuote] then the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "8c3b9e1d-018a-4ca8-87dd-1326c9ebef1e"],
 " ...\nWhen the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ebfb2343-ad0b-4ae1-8e29-ce7124ea29a6"],
 " increasing, then the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7934d22f-2c18-4e7c-afc7-cb0f159f8562"],
 " ...\nWhen the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4bcdf903-f38d-45ab-a3f8-3b15ff19616b"],
 " decreasing, then the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a45e704f-1cde-4960-8c56-b3b40ffb1834"],
 " ..."
}], "Text",
 CellChangeTimes->{{3.707758514651867*^9, 3.707758518009275*^9}, {
  3.7077587034061484`*^9, 3.7077587574927588`*^9}, {3.7077587894450083`*^9, 
  3.70775882168507*^9}, {3.7077588717379365`*^9, 3.7077588769633293`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"30c16b72-7576-462d-96f4-6bec71ef8ea7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "8"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Orange"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7077571127574253`*^9, 3.7077572005075283`*^9}, {
  3.7077572514603615`*^9, 3.7077572579552326`*^9}, {3.7077576421710625`*^9, 
  3.707757656698801*^9}},ExpressionUUID->"5178c417-3922-451c-ab3b-\
0e7f878ee78f"],

Cell[BoxData[
 FormBox[
  TemplateBox[{GraphicsBox[{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1: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

           "]]}, Annotation[#, "Charting`Private`Tag$33714#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1: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
qW/c1J61+P+///4Pveamxg==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$33714#2"]& ]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-2.999999836734694, 4.999999836734694}, {-5, 8}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
        RowBox[{"f", "(", "x", ")"}], 
        RowBox[{
          SuperscriptBox["f", "\[Prime]", MultilineFunction -> None], "(", 
          "x", ")"}]}, "LineLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                TagBox[#, HoldForm], ",", 
                TagBox[#2, HoldForm]}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.7077571815488105`*^9, 3.7077572016646986`*^9}, 
   3.7077572596143885`*^9, 
   3.7077576579506874`*^9},ExpressionUUID->"081704de-c1ea-4e04-a34b-\
f1d002828cae"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Finding the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"3d994feb-c17d-4661-a142-54716c6fb1e0"],
 " graph"
}], "Section",
 CellChangeTimes->{{3.707774198323549*^9, 3.707774254710757*^9}, {
  3.707781365805295*^9, 3.7077814094512577`*^9}, {3.707781448127695*^9, 
  3.7077814558679085`*^9}, {3.707781491092898*^9, 
  3.707781493708759*^9}},ExpressionUUID->"c0740281-9e6b-41ec-9a4d-\
b493f7323dde"],

Cell[TextData[{
 "To find the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5364c716-db62-4cb7-ae8e-2b19b11535ca"],
 ", a similar process can be used. In the same way we completed a \
\[OpenCurlyDoubleQuote]slope analysis\[CloseCurlyDoubleQuote] of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "77928f68-c13f-4cf9-b864-2b60b88d86aa"],
 " to find the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "09c34d84-46d6-4c44-a5f3-77538fa0c29f"],
 ", we can do a \[OpenCurlyDoubleQuote]slope analysis\[CloseCurlyDoubleQuote] \
of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6b3d0594-248c-4c32-a335-238a2e8608d0"],
 " to find the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2d547ce4-f2d8-465c-86cf-d48e7aaf5993"],
 ". "
}], "Text",
 CellChangeTimes->{{3.707774273383009*^9, 
  3.7077744350833406`*^9}},ExpressionUUID->"346813cb-d00f-49b6-8b92-\
dc02ead96053"],

Cell[TextData[{
 "Use the orange ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0fc3c8e0-57eb-4f0b-b288-042822345d4f"],
 " graph above to answer the following questions:"
}], "Text",
 CellChangeTimes->{{3.7077744821161027`*^9, 
  3.707774500126854*^9}},ExpressionUUID->"69c11a33-6802-4799-8e80-\
a0bce6f80105"],

Cell[TextData[{
 "Where does ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "''"}], 
     RowBox[{"(", "x", ")"}]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f78e2477-6116-4cdf-99b0-c9f842fbdb44"],
 " (the slope of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "55eba2ac-b2ec-419f-97b0-9ef0b1357e9d"],
 ")?"
}], "Item",
 CellChangeTimes->{{3.70777451800154*^9, 3.7077745446024046`*^9}, {
  3.7077746527085958`*^9, 
  3.707774679003559*^9}},ExpressionUUID->"07e4b7dc-723e-4022-8fb7-\
c3b0dab80237"],

Cell["", "Text",
 CellChangeTimes->{{3.707758514651867*^9, 3.707758518009275*^9}, {
  3.7077587034061484`*^9, 3.7077587574927588`*^9}, {3.7077587894450083`*^9, 
  3.70775882168507*^9}, {3.7077588717379365`*^9, 3.7077588769633293`*^9}, {
  3.707774564240337*^9, 3.7077745708720407`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"4a1c575c-57e4-4ddf-a593-076e3bf46806"],

Cell[TextData[{
 "Over what intervals is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9fe7b491-6ffa-43cd-8146-0d867f6ba42e"],
 " (the slope of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6cec371e-8840-4262-8070-3eb62ce742a9"],
 " ) positive and negative?"
}], "Item",
 CellChangeTimes->{{3.7077745784274063`*^9, 3.707774631200312*^9}, {
  3.707774701711648*^9, 
  3.7077747155715*^9}},ExpressionUUID->"13c63a4c-54f1-4a72-b7ad-abccd7a4f63c"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "''"}], 
     RowBox[{"(", "x", ")"}]}], ">", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9ae66096-6c7f-4cfc-b9fd-1a324a654c18"],
 " over...\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "''"}], 
     RowBox[{"(", "x", ")"}]}], "<", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b0f1ccf4-ab43-4e1e-978e-0b249e2232af"],
 " over..."
}], "Text",
 CellChangeTimes->{{3.707758514651867*^9, 3.707758518009275*^9}, {
  3.7077587034061484`*^9, 3.7077587574927588`*^9}, {3.7077587894450083`*^9, 
  3.70775882168507*^9}, {3.7077588717379365`*^9, 3.7077588769633293`*^9}, {
  3.707774564240337*^9, 3.7077745708720407`*^9}, {3.7077747244107523`*^9, 
  3.7077747630401754`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"712dfaa0-fadb-4130-8946-73ab876729d0"],

Cell["Run the following input cell to check your answer:", "Item",
 CellChangeTimes->{{3.707774785564133*^9, 
  3.7077748044335136`*^9}},ExpressionUUID->"2bcba24c-11f9-4c3e-b34d-\
56d97981f764"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "3"}], ")"}], 
     SuperscriptBox["x", "3"]}], "-", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"3", "x"}], "+", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "8"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Orange", ",", "Green"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7077748267932262`*^9, 3.707774846633441*^9}, {
  3.7080872833804183`*^9, 3.7080872871981287`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a02d28c7-cc52-478f-83bf-b37bd3d0295e"],

Cell[TextData[{
 "A common test or quiz question would give you the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e14b9ec3-11bd-41a7-92c5-9ab17b1ac460"],
 " and you would need to sketch the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "702c1e38-f4f5-4142-9fda-71798a06a17e"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "''"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f761be8d-d27f-4889-aff0-940fea5cd0d7"],
 " , or select the correct one from a list of choices."
}], "Text",
 CellChangeTimes->{{3.707774868079676*^9, 
  3.707774954223787*^9}},ExpressionUUID->"4b2d8d55-7161-4bef-9ed5-\
ca0350bd7dfa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Going Backward", "Section",
 CellChangeTimes->{{3.707753735062687*^9, 3.70775380818188*^9}, {
  3.707774263319889*^9, 
  3.707774266494116*^9}},ExpressionUUID->"c1285a27-170d-4ecd-83ae-\
b01fde41c934"],

Cell[TextData[{
 "You can do this analysis in reverse to create the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ce2ea109-69b7-4d49-9469-ab6da9667179"],
 " if you are given the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "57937b95-17cb-43d3-b57d-88be0b4f7efc"],
 ". "
}], "Text",
 CellChangeTimes->{{3.7077750138981657`*^9, 3.7077750535905423`*^9}, 
   3.707775376886091*^9},ExpressionUUID->"79888f63-3398-4bf9-ad9c-\
1067309e11ca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}], "2"]}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "'"}], "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", ".5"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Orange", "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<y = g'(x)\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7077571127574253`*^9, 3.7077572005075283`*^9}, {
  3.7077572514603615`*^9, 3.7077572579552326`*^9}, {3.7077576421710625`*^9, 
  3.707757656698801*^9}, {3.7077751141654882`*^9, 3.707775144427983*^9}, {
  3.7077752156614785`*^9, 3.707775338043878*^9}, {3.7077754220495887`*^9, 
  3.7077754321657896`*^9}, {3.707776055348073*^9, 
  3.707776085159876*^9}},ExpressionUUID->"7fab6f71-e4fe-4e52-a3cf-\
8406180a5fba"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[{{0.5, 2.}, {0.5694093160044135, 1.7223627359823461`}, {
        0.6426470938928, 1.4294116244288002`}, {0.7109492788838646, 
        1.1562028844645416`}, {0.7850301566918931, 0.8598793732324275}, {
        0.8541754416025998, 0.5832982335896006}, {0.9290994193302705, 
        0.28360232267891794`}, {1.002659232732048, -0.010636930928192179`}, {
        1.0712834532365036`, -0.2851338129460146}, {
        1.145686366557923, -0.5827454662316924}, {
        1.2151536869820208`, -0.860614747928083}, {
        1.2832568430802251`, -1.1330273723209006`}, {
        1.3571386919953936`, -1.4285547679815744`}, {
        1.4260849480132403`, -1.704339792052961}, {1.5, -2.}}]},
      Annotation[#, "Charting`Private`Tag$10701#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox["\"y = g'(x)\"", TraditionalForm],
   PlotRange->{{-0.49999992857142855`, 2.9999999285714285`}, {-2, 2}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.707775127055631*^9, {3.7077752660712385`*^9, 3.7077753390980315`*^9}, 
   3.7077754337929277`*^9, {3.70777608159935*^9, 3.7077760856652346`*^9}, 
   3.7080033373498774`*^9},ExpressionUUID->"426a0f26-de0c-4da2-8ade-\
36a73b0ff115"]
}, {2}]],

Cell[TextData[{
 "Look at the orange ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"g", "'"}], 
     RowBox[{"(", "x", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "91a9bcce-435e-4e37-93ac-f83f481da9ad"],
 " above and answer the following:"
}], "Text",
 CellChangeTimes->{{3.707775383824497*^9, 3.707775386338254*^9}, {
  3.7077754938460665`*^9, 3.7077754983302746`*^9}, {3.7077757180139074`*^9, 
  3.7077757807138805`*^9}, {3.707775977856998*^9, 3.707775977856998*^9}, {
  3.707776033296318*^9, 
  3.707776034085853*^9}},ExpressionUUID->"b480b18c-d229-4e69-acf2-\
d186c2daeab9"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"g", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "25e7df0c-2086-4a64-b6f7-f2992882e89c"],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "bb19c917-c876-4726-b4af-c3a002169b81"],
 ", then the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "60813a97-b637-452d-a828-b3b0762b275d"],
 " will look like what at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "291a35c6-db26-4882-ada9-a11f443a5bc7"],
 "?"
}], "Item",
 CellChangeTimes->{{3.707775782780321*^9, 3.7077758458871155`*^9}, {
  3.7077759816076593`*^9, 
  3.707775985591484*^9}},ExpressionUUID->"b3160bb7-229d-4f83-b4a0-\
7129297e596a"],

Cell["", "Text",
 CellChangeTimes->{{3.707758514651867*^9, 3.707758518009275*^9}, {
  3.7077587034061484`*^9, 3.7077587574927588`*^9}, {3.7077587894450083`*^9, 
  3.70775882168507*^9}, {3.7077588717379365`*^9, 3.7077588769633293`*^9}, {
  3.707774564240337*^9, 3.7077745708720407`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"1b958751-8911-4b96-bdaf-a58580fd4935"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "561d82f1-0306-41f0-837b-e0cebbbda56a"],
 " is positive for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "501cdf59-79e1-4b62-bc64-0f9077412459"],
 ", then the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c7fe7130-d14c-45d5-b9a8-14d5d26bc873"],
 " will do what for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5a8732bf-6f04-4c6e-8222-c32537692798"],
 "?"
}], "Item",
 CellChangeTimes->{{3.707775782780321*^9, 3.7077758458871155`*^9}, {
  3.707775920970848*^9, 3.707775939657084*^9}, {3.7077759900996566`*^9, 
  3.7077759937992816`*^9}, {3.7077761700258045`*^9, 
  3.707776176696858*^9}},ExpressionUUID->"d06766b4-9a29-4626-b1c6-\
ea657945a518"],

Cell["", "Text",
 CellChangeTimes->{{3.707758514651867*^9, 3.707758518009275*^9}, {
  3.7077587034061484`*^9, 3.7077587574927588`*^9}, {3.7077587894450083`*^9, 
  3.70775882168507*^9}, {3.7077588717379365`*^9, 3.7077588769633293`*^9}, {
  3.707774564240337*^9, 3.7077745708720407`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"3918db28-822a-4044-b3bc-126d6712715f"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "dfd7fb30-7ffc-4334-8fcf-85c047a4bb22"],
 " is negative for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e0536d31-d40e-4958-a8f1-8257f6862874"],
 ", then the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ed010ce7-22c3-462e-90b0-c8b9c0b072c9"],
 " will do what at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2cab0162-5128-4e1f-87d7-7fd2aa5bcfee"],
 "?"
}], "Item",
 CellChangeTimes->{{3.707775782780321*^9, 3.7077758458871155`*^9}, {
  3.707775920970848*^9, 3.707775939657084*^9}, {3.7077759900996566`*^9, 
  3.7077759937992816`*^9}, {3.7077761417225246`*^9, 3.7077761458264103`*^9}, {
  3.7077761832324953`*^9, 
  3.7077761865458717`*^9}},ExpressionUUID->"39693cd1-e3af-4fcd-9cca-\
f8f750997722"],

Cell["", "Text",
 CellChangeTimes->{{3.707758514651867*^9, 3.707758518009275*^9}, {
  3.7077587034061484`*^9, 3.7077587574927588`*^9}, {3.7077587894450083`*^9, 
  3.70775882168507*^9}, {3.7077588717379365`*^9, 3.7077588769633293`*^9}, {
  3.707774564240337*^9, 3.7077745708720407`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"2eee079a-d1fe-4268-a2df-e1c2649d9d4d"],

Cell["Run the following input cell to check your answer:", "Item",
 CellChangeTimes->{{3.707776208772613*^9, 
  3.707776252533052*^9}},ExpressionUUID->"879eaec8-c3b1-4417-8e09-\
ba88e298fd00"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}], "2"]}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "'"}], "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"g", "[", "x", "]"}], "+", ".5"}], ",", 
     RowBox[{
      RowBox[{"g", "[", "x", "]"}], "-", "1.2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", ".5"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue", ",", "Green", ",", "Magenta"}], "}"}]}]}],
   "]"}]}], "Input",
 CellChangeTimes->{
  3.7077762734679213`*^9, {3.7077764030626407`*^9, 3.7077765149427443`*^9}, {
   3.7077765458113985`*^9, 3.7077765588606243`*^9}, {3.7077765896534643`*^9, 
   3.707776656480895*^9}, {3.708003362028236*^9, 3.708003383118743*^9}, {
   3.70808732835258*^9, 3.70808732962048*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"65c09764-58eb-4107-8bab-120eb1b03cfe"],

Cell[TextData[{
 "The Green, Blue, and Magenta graphs are all possible answers for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "78cdcebe-ccfd-40e0-9930-75201414e84c"],
 ". \nIt may seem surprising that there are many solutions...all share the \
same shape but are vertical shifts of each other."
}], "Text",
 CellChangeTimes->{{3.7077767633127093`*^9, 3.7077768750804386`*^9}, {
  3.7080033951669483`*^9, 
  3.7080033958874607`*^9}},ExpressionUUID->"2dbb10dd-a85e-4543-9e09-\
d6bee1a5025d"],

Cell["Challenge question: Why is this true?", "Item",
 CellChangeTimes->{{3.707776880667429*^9, 
  3.7077768927790213`*^9}},ExpressionUUID->"3fc13f82-4705-40b6-ab5c-\
a3204adfcdb5"],

Cell["", "Text",
 CellChangeTimes->{{3.707758514651867*^9, 3.707758518009275*^9}, {
  3.7077587034061484`*^9, 3.7077587574927588`*^9}, {3.7077587894450083`*^9, 
  3.70775882168507*^9}, {3.7077588717379365`*^9, 3.7077588769633293`*^9}, {
  3.707774564240337*^9, 3.7077745708720407`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"f405b05b-e4ee-4418-9bb3-63731156b9bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Practice", "Section",
 CellChangeTimes->{{3.7077770143972135`*^9, 
  3.7077770155938897`*^9}},ExpressionUUID->"82c88815-4e9b-48af-b9cc-\
62bbd2809c06"],

Cell["\<\
Each graph below shows a function, the first derivative, and the second \
derivative:\
\>", "Text",
 CellChangeTimes->{
  3.707782629980397*^9},ExpressionUUID->"02e20d07-069c-4b7b-ba71-\
606876699f47"],

Cell["Type the color of each graph on the axis below:", "Item",
 CellChangeTimes->{{3.7077770891295624`*^9, 3.707777156025465*^9}, {
  3.7077825776135035`*^9, 3.707782649022892*^9}, {3.707782754864175*^9, 
  3.707782776433476*^9}},ExpressionUUID->"178395ae-ea55-4723-863d-\
62677da3d218"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6224737a-1d4b-4925-9712-05fd35daeb02"],
 " :\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "679e0ad6-f553-4328-9249-c0a1e8a64763"],
 " : \n",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "''"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "71bb32ac-33c9-469d-80a8-0cc59a9f8a15"],
 " :"
}], "Text",
 CellChangeTimes->{{3.707758514651867*^9, 3.707758518009275*^9}, {
  3.7077587034061484`*^9, 3.7077587574927588`*^9}, {3.7077587894450083`*^9, 
  3.70775882168507*^9}, {3.7077588717379365`*^9, 3.7077588769633293`*^9}, {
  3.707774564240337*^9, 3.7077745708720407`*^9}, {3.7077826681574926`*^9, 
  3.707782717482483*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"b2f41cb2-dcda-46ea-942c-188d4fe9494a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "g"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], 
   RowBox[{"Sin", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.707782303972436*^9, 3.707782319580371*^9}, {
  3.7077823916454153`*^9, 3.707782398342697*^9}, {3.707782484620221*^9, 
  3.707782485475053*^9}},ExpressionUUID->"3a3f4906-a0b2-49ba-980a-\
cb14386c7fc7"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
7/oDjY7K/wHLHwXS
        "]]},
      Annotation[#, "Charting`Private`Tag$22075#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
69Rb/72lYUutpbbuFRZBmd7ZMvqBhisiYlafIz0aOSO2oZ2GrVv2KN0nPTK2
okatm4ZCPfburaSHzU09lT7T8MOC6f050oPFnrJrvtPwPufLT8yrLKJf4m7D
8gEaJkzd4tEk/d2HuMAcpqFrsOeKbaS/dA+tEf1Dw0GqvJI56U/6jA9CE2Q8
w86sPEK6+55eEGWGhsqFy7msSHdyOKlwz9PQrmP07UHSbU7hnf/+0bBY6PGl
HaRPOHUZ/eWgY4CAKlOXtGv0qYQ5Ljq+0lGLWkXapZZzbIaHjvcfXxnhIn1s
OtZkio+OIaZ/5b+Q83dWUE4Zp9DRPPCkXglpJ8vnk38E6NhzM1PxGmnHMPOd
I4J0FDzu+9uMtMPTgbSfwnTULnkZJkLabthvdoBOR7Nuq9n3ZHxtZWhm/SJ0
3DTF1AklbbM7M+ubGB2Feru26ZK2CtRZ+CxBfk/Vf3Ufmc/DX+zzuqTpqCD5
eaMC6UP0qcV2WToeTzvq/pysBwvDMIvWFXRcOrXfZR9p88xHXO/l6EgR4Ux1
JOtnf+vWI03y5PNTMV1fyXrbx9v1sEGBjj5a2s1HSO85zmlbq0zH7CDzn7r/
r8+7sUUvVOmo3/2QP9WfRexsWCdQrU7Heb3urkU/FrFdxbzsqSYd67zd7uST
9W5iMyBUpkXHC+LVXmwfFrEtws+5eCMdqXrPlwxIG41mMB5uIuMTVyD2lNxP
hqt0XP/Tp2OOfNLdkfNkP9z/5vl9Azr++qFGSJHeUjR5MsuIjos/9k84kPtT
13vrq4SdpNuP5meQ+1snr1M2fjcd25kG4pnk/t/Y5X42xoyOoxnLRFNOsYgN
m2NX3TIn17vmTU3gSRahvvTDL9iKHP9wb9W4C4tYExqq4elGRzWKmU8G2a+8
2rWCnNzp6E7f6WhE9jNi7fcmCw86imtEc346QuavVt9N34uOn1W3OP49xCIS
OSeyqH50TFO7f2qc7JciATbSWdfpKOuUZ5JvTNbDG+qJ+Bt0PLv/V88PQxbx
SLqsLDyCjhNRDGFpsl+bPWVYnLlD/n+q0MhTn0WEz7y6ZZBARwPPlS+atFgE
15n1vF15dBRQqi03lyfzR3w+0PSAjtWa2Y4KciwijXYzo/o/Oq6b+Bw5uZJF
GBQOQM4jOhKLAaf9ZFiE368kv7PldIzTK1LcRJ4/E8f4xoTq6TgoPbCH458G
8d2qp9tokJy/+dpHelkahOAWy1yHn2R+irVTn6ZoENorP54N+kXHwgvsvnXx
GkRYX6Pgs9H/x0/eqee6BqHh/sxgPZuOpR3bei57kOdzYELGSioD94jwre3W
0iDE0yzd/iozsPzkvZNZJeqEwZWPG6XVGIgjsj7rCtQJV+e93LoaDLxQO3j5
XpY6Ualkmnx2AwNruPuvHo5WJ5web3w3vJmBTA8LDsHT6kRhjbhm124GrtVk
DngoqBPbf3ycK/FgoPL6bA6JUDUiUCXS/+FpBt7s9ZXcFahGPDmz/V+eFwPF
T1zl8zqrRsgsVnIkX2DgTC+Xa6w9eV+SyOG/EsRALUUncU0dNSJmu4+4WSQD
q07y0Wr6VImv+bLrBwoYmHT2+zptTVVCfKL9yZeHDGx3FVqZqaBK7NS9o9X1
mIFbvqo1ccmoEkW1vLpNJQxc5R29K55blQjp/WPwpIqBsjWDTWKtKoQq7cXu
oLcMlLgxe8TRS4Xw8TrmKvGbXG/ttQdbspSJsF1/jm8aZWATa3v4i1hlIl7e
+7jdOAONyrWitUKVidL2MJecaQbmBFqsGjqhTExu+s954yIDzT40KF5TVyY8
uCcdDtFEMPHuC+744nXE0ZhLR+LWi2BXfba6bLESYVaatFPigggO7Jk52H5J
gXCddFoS9xFBH9/y9mOeCsRVlnKxuJ8I5ub4dQ7YKhDlD8qXiweJICWqxbFq
kwIhl9o2JhoigsYve0oqJ9cSM6G0eEacCAb/jnvFe3Qtce/I1T7BUhFM3uXT
+najPPHnr1sA9wz5Pv9J/vyi1UR6x+Vij7OiuMLfs5NjN5OYd93i4LsginEu
lR8bpnmI5f/uWJ/xE8N9yw2l/HeOwoDpjUYKjzjaxX7K+P1DDF8qNMGKG+I4
OHT64erDa9CNksOzmiqBUYceO17/q4JlafJbXt6RwJipvSrddZr4brN+nTlD
EgVj7zk82aSDbLekAw6Rkpi2Nn1L9sXNWL8v1UJIgomHGmQqOocAnfT0c3Nj
mBhmfxp39Bjiid9vpz/FMbFFi8/Kus8QT6fbbxVJYOJ+2zcnTvwyxIvUq98C
Upio8dDcynfBEJO7GmTMc5joHeHN4ypjhO2+lrf/ljGxSbMsN8DKCHc+8/Ld
38NE83zJROc2I9zvwVMf0stExpsyjt+fjPCwXJxE5RcmvmiZ/3C63wiPhz8t
Uuhn4onBlZluk0YYbMXxZ2GEiUuFlFAFhjE+n49wyllkYmBQ1e2KXcZYV7jy
cQ+HFKYH2SWzzY2xyenxEp1bCjeFvXvLsjLGnsbWZH9+KQxS47wT5WqM7ESZ
jn10KfSUk18tc80Yl8wK1oaISGHcgfw+1k1j5OOGcxViUpiT/+2+YbQxip10
YihISaF4tTXrYLoxyqycsreWkcKUhNVDFnnGKPfxWuHt5VJo2JsYZf7QGJVD
Jf/VrZRCVmO4ys5SY1y/+f6uhdVSaBJcUqhfZYz/A4RN0lE=
        "]]},
      Annotation[#, "Charting`Private`Tag$22075#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
1IHNejlmy3Ji8Hxmd8qynA78D47IjmY=
        "]]},
      Annotation[#, "Charting`Private`Tag$22075#3"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{0, 2 Pi}, {-24.082958430493104`, 39.47841438162918}}, {{
      0, 6.283185307179586}, {-24.082958430493104`, 39.47841438162918}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.7077772029657655`*^9, {3.7077772648246746`*^9, 3.707777294821928*^9}, {
   3.707777396426956*^9, 3.7077774041734247`*^9}, {3.7077774366775093`*^9, 
   3.7077774561482964`*^9}, 3.707777727938837*^9, 3.7077822773490057`*^9, 
   3.7077823205340433`*^9, 3.7077823994645185`*^9, 
   3.7077824869089184`*^9},ExpressionUUID->"8d0d3c93-b699-4cf1-99ab-\
10a07c2ecbd7"]
}, {2}]],

Cell["", "Text",ExpressionUUID->"8157e1fd-8bd7-4523-9fd1-54fd915a5b09"],

Cell["Type the color of each graph on the axis below:", "Item",
 CellChangeTimes->{{3.7077770891295624`*^9, 3.707777156025465*^9}, {
  3.7077825776135035`*^9, 3.707782649022892*^9}, {3.7077827797498283`*^9, 
  3.7077827902272615`*^9}},ExpressionUUID->"d5482d60-353e-44f8-8200-\
acb078871ef9"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["g", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b5ad09f6-b911-4c50-9cad-f9c5f24165cc"],
 " :\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d3769fc6-1c25-4b36-b9c6-1f838540b679"],
 " : \n",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "''"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "8dbfeabc-e1e7-4f02-a35b-3b7840a7857f"],
 " :"
}], "Text",
 CellChangeTimes->{{3.707758514651867*^9, 3.707758518009275*^9}, {
  3.7077587034061484`*^9, 3.7077587574927588`*^9}, {3.7077587894450083`*^9, 
  3.70775882168507*^9}, {3.7077588717379365`*^9, 3.7077588769633293`*^9}, {
  3.707774564240337*^9, 3.7077745708720407`*^9}, {3.7077826681574926`*^9, 
  3.707782717482483*^9}, {3.707782821861001*^9, 3.7077828264212365`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"a66e4349-3e33-45e0-9fd0-a9413ca4a0d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "3"]}], 
    RowBox[{"Cos", "[", "x", "]"}]}], "+", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "'"}], "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"g", "''"}], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{"-", "\[Pi]"}], "2"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], "Input",ExpressionUUID->\
"c564aa2f-84e5-4727-8a0d-1c95de5c1de8"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
2TEewv/7Xgv9/++1/g9VcqBC
        "]]},
      Annotation[#, "Charting`Private`Tag$22407#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
H0NE+P/fh8M7p5ce/77P/h/tFmR4
        "]]},
      Annotation[#, "Charting`Private`Tag$22407#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVl3lUjd8XxlMJDWjQXAhpVEKSaldIVF9JFEqEFA00SaJBhpREydAgTRRK
Gg3Z0axBpfF252YN0q3bcN/L7/7+etdnrbPO2ud59nn2ede6+tid5efj43uw
iI/v/19J5YE1XgJTePD0h5/LrCQqjFTaNkXP/cHTFGn5S1ISFYpXl1+L+TWJ
yy9VmrzyFa5oSd7s6Eb5jSe39wlKmPBX/HAvHNr2aRy133Pg39tpzFZvNbAt
H8WM16V7BMNp6L6x4GtY8ShOWwaZXKulosaGB/sL3o6inKCtrtdyKuatOegk
kcpb79sg/z6FjKUyraHt10dxrkuxuuVrD9Ytbq1xNB3FI98ZVLc17TjKaLE/
VfkLVViWitu9v6Hus5aLvvUjeGQZf52SRw3csQ7kn68YwZVCUVt/fqwF+l+F
hNCyEVy4X/DIW6Qe7p8+Vxrzksdh84YOOQ0wofWXm31zBNkLJuvmLrTAG9SM
7jUbwQNvu5eqhHWA2sCtrN0fh/H1lOaWRhMahD3W2t5QMIxRy/aeFu6kQfe+
trqDOcN4AzbMOuvT4Xae0tiJJ8NYXFL5yKiRDoOXi/SuBA5jJuHnnzfNgExh
Jr7VG0bf0ui4cwb9sFbXmCT9egjf7agS3x89DNZ2I4mbMoZQ1uvO87z6YQjy
f3TIImkIn/MLu3YuGYHmsvHGgOghfNRvl+hzYwSCzVKx/cIQhrnf16+//Ava
7f5lPtQawhcqdseUDo/BrYCvPsvzBvGV8CtbT+ZvKHjspaWaPYh+33Td0kQn
gfxBbsQ4dRCJ35FxYxsnQe/vJVev2EEUEv5UonFiEmi3VA43eg+i5EWBNJP6
STB4csPwrs4gLtFJf1/79A/8+rhnsVDBAI5Le7wPXM+C1w9Kv/u9GkAVrYkH
a0xY4OmuHsd4PoAlnoYpLx1YML5KTKE8dgDV+TWtbO6yYPJiu66/5wCStJ49
nB1nAVv1tBNz4wC6K2SdbMybBv74sMIvqf24oB8TmCLNhkqPqSCtxH4UT1Hb
NqvJhkjTMybP7vXjgYnO1k1mbFg8sbc+IKQft8lrfdl+gQ1L962gaR3rx+N8
MhIF5WxY/i9FOGlVP+rIeprudZoFhQufTl2O6UM6OLnrhs3Bs7o6C7HIPlQ+
UZrH/2AO5FU7NTOu9qGt0D1a0QseMyZnms/3odMeL8UP3+ZA1kH1ruq+PpS4
v7PWTGAepHY9eN+xuA87K02Uj12fh4S01McXuEwMG8o9senePEj+fR2yaIaJ
tehFMJPmQeJDjYV2PxMtIlq8xsvmYaUOQYr8xsRvEtULt//Mg6jCOYGtoUw8
zZD3JjktQEyQ/3B9IBPprvZSZR4LINIZ3uTizUSZv8TDwMAFEH6Q/DjamYmR
Y9d2JN5fgKVL2jT7djLx/mM90VMVC7CYZWT/cI6BZjSHX5qKHIi03b9DbZKB
Ukm5/fIbOSCY56D8ZYiBzp8eG45u5rGH7/BIJwPNb6oo6O7lAD/tZYhZMQPd
XSkpVhc58Pe7RNbkJQayV1Ubtn7mwMEnqsUy5xn4ZMuAGFRzIPOsYbWJKwM9
Pn14/7CJA/v5XAdi7BhoLx4bO0rhQOK2gg3qWxjYMhRz/AyXAyP81dtsNRkY
dLrlzqLFBBi1dO+5vI6BOdSr3yJFCWCe53OrlmTgCVZbkLECAdppB7JPTdPx
yE/jyqDtBIR5nS65M0bHqCn7DXtNCGgzvFyT30/HR9sXfnB2ExDUkTrIbafj
u/M+SrJ2BFQJT6g+K6ZjZ0u1j9IFApwCYl62BdKx733Hx1NPCMg3Tyud96aj
T3Dq7icpBPCvLKpdc46OEuZR8cXpBLzK7R3ydqCjplJ+WuYbAqZpGmoiBnQ8
X0J2PIwE7H1rYqCnS8drU5vGvlUS8CzYzvKoGh0985belKkjwHRVsPtLWTqK
0SeGAloIkH708ODtKRr++MjnuJROwGedj5c6mDRM/Mgk8voIcP3OeLDuJw2/
MiVHjIYIePtPtw0LaXjuY37Z8gkC7J45Toll0rBbqvmN3R8C5raGSTgl0HD/
SPqy69ME7D7/w27On4bGWpKroxcI+CU462txloaA94Y9uQTEPVeOTzhMQ9bK
a0b6fFwgt3v91NWnoV5BYVboYi5E+DxiXVelodTRxY3/lnBBTbhcskmahoLe
9NRzwlzwA1F7j1kqPs2N8JxYzoXdu/Dm6UEqLuUSNobiXJDe61vq3EFF/kVL
PnlIcmFo/4YRhyoq+k69+RKyigtl/3XL2xVSccUF/jN+MlyIsou2tk6n4moX
lRIbOS4cO2Jy3eIBFdXldSpEFLhAOGcyDH2oWFv4WW2LMheaTjlIbjtBxVUV
2SnJq7mQelZ4j44NFbcMH5gdWcMFH4/yQHUjKt5c+GuqoMIFU6+Lr9ZpUnFi
Kf8t3XVcEL+0jqQkT8WLZ/Na1ddzgenfKSK7jIr9qSd1lmzgQmFQlLHEHAUz
roXk1vE4MsTIR3SIglv4vP7zVuXC4bDfaUKdFJx0yFSd47FqZHobXzUFCwaS
TNw2cmH29mFBTiEFr+m3vyjjcV30Uv2ZdAqu4es4/pvHT+9/Ovf7AQWZStpB
wmpcOB/v/XQkjIKS93z5/89Gj9c29PlQsM7DXGiCt14sqZ2gnKCg76jp/RIe
U1Nvb+q2oWDwKbmc0zx+l254ss2IgiSd6y4zvHrCs8cfNGpSsLdB7csFHtvl
plXWyFPwRllPSw3vPOvyDs1ULKOg4w3HDCEeTxcIbfw0R0ZGhZ+ZJk+P6uIP
jsVDZLRbtqh0K0+vxA+ed/M7ySgxQ16xjqfnufLVn3OqyegqN+rA5ult8LVt
PKOIjH2C0kl5PD+WVd9cnZpBxh1GBwaseH6R6gwOPnlIxmj9++bNilx43Tga
8TCcjHrHOr5s4/kb0pJaFHORjOvnN7pF8PxX7haUDf+PjA2Bm9waeP3yu7d0
31VjMs76i3fV8vqpgnb+aoAWGa+rumTk8PrNdaiF6iFMxjLn/utKYlx4yU7O
sqvpxfbLZY9r+bkQtHCgy7q4FwOO9e2Y/EfA/r/8y/Zm9mLq5WtP/xIEjC32
8NwZ0YsVRyO+NbIJ0F21bct6k15cWtAroztCwCK54TPK2r2YKXpi0Z0BXt4o
JiXKKvbi2x8CojUMAvzXL1oQXSCho7lE6XQPAWVbmipmikmo2iFXo1TP20/m
nqVENgkXbK7MTFfx8mTBumVTIgkzSBlTxRUEPPnaSDsXSMJ0cVboTCkBlw80
/u3RJ+H645+FPbMImNCLucVWJaGLQkLjwzQC3KStl0vKkHBR1nB+RhIBRygN
StazPeg5Zrw48gEB+hcajL6U9mDw9FpJ0xAC8v6LriK97ME3wRbLPgQSoKpn
ZT37uAdNjrYGKF7i5dH89+O6QT2Y5PKLnH6WgJlb34PTDXqwKWFwRb4NAUXp
9WW3PnTjytBr15vlCNC6FWWakdONt/12jbAkCMj02FeHT7uxjNZxWZCX3wm6
9V1zV7pR6qKz1hAv7/2+1LHPG3ajYfPgxiI6B/RItVsPfOpCAw3X1YHpHMgX
r3knU96JO/cMvxuW5oDdCfH99NedeEO0+eMXUQ6wc536Xj3rRMdi4d/X+Dlg
tJu1yjCoE5v4joqXjS9AXeCaq05bOjH2+x6SYuUC0HuD97zI6cDWMK+gYt78
FM/WIWkktuM1CeZodPY8FE0F+7Ei23F8dlwj8+k8OEKN6Ge/dqQU1Aa8jJmH
1G4nsDnYjsriUZ4+vvOgIXI300e0HbPLfscKGc+D+cV+76KIn5inrG7i0jwH
foZPBUx82vA1RK5QY85CQoIC+ciJNqRNBfEv/TkLRRMpRT42bejWEvCyo3IW
2OnpZ19otuFCrdVuw6xZCBJ5Uys43IppNuincW4WrpO/RDecbMXgIgWRoiE2
3LneL3nUrgX9/SJEuntnwPCmi+Xw+UZkfpyKaIlnQf3ctawTVo3YPMz6zQhn
gaNnMn+HZiPqiV7rHvRhQcChns9fxxowefyrbYMVC96tPbQ5ybsB+UwG/+MT
YMHGLxby//l+x7+PS1eq+kyB1Kz2WOGVOrQUTM4pN/kDv92J+6F3qjD42bCm
fMg43KhKMoS5UjR9u3ajSCkDOj8ZVeUKpKH1I+niK5xacNGy4No/SIW0Vfvz
LftrkGHpeNg7tQz4BwPOrNrExOl8yJfdWQWH9oWYJkuPY6PmTomLzlUgsZBz
tmDXOGa81A+oDa2Cw41l9HcXx9HuufbOwKoqENhXud/7+zgWxCrU/rSpBtmu
qhW0kAn09pqlxp6sgbpg8pUrvP+WIY385Ytv1YEyGrBsLP4gKUvZ+09LI3jM
vjhwvYmFJUJv7F5NNcLBnWIcHzoL48/t2O4i1QThp+lLD7FYaK1uz9fk0AS6
eh0i47LT+OVN1MNX1CbQHnKd9D49jS8Kp0tcxpqh0/OsVfLMNBadHPg3eKMF
VJTU6jctZ6OKuJbvt4QWaPStldi0mo1xX337U7Ja4LB7Xo2iLhu9VPjq7Wtb
4NHIYZ26g2xU7Zd/+E24FdBR8NDhBDY+OWe7PvVBKwhTrDx2Ss/iVe9Ploef
t4HInw3kBtE5NIeZM8vz20CuZMo0WX4OhVfqhNd+aYNdgo/jnNTm8ElB+ocd
1DY4e5N353fNYcl0lIay0k/wf6EjcvfKHE4FO4oOPfsJyqETtdrMOTx/e+ZH
UGI7sC0LNWuy51HPUWdsc3Y73L2gnRvyfh7n1TyWjha3w+ZjQ4/WfpnHO9/J
ps4d7dBkfuKWfsc8ZotVFZhJdcBe/iU3o/kXkBH/MF74YQeUZB762XV0AR3T
dByS73XCzvcmB3MWFnB6CfVUTmonWKktl2MKcjDOJ8azJL8Tymdkbgmu4GC9
yUh4S2snJPTXSQut46AhJf2NoHQXiJ45E7mwj4OK8tL8Xqld4P78/ubkeA6W
hVeJBud3QYxz7yv3ZA7aj/jK3K7oguj7ZX1KWRy8V/ZD6wWzC9T/RXmal3Dw
75Eohw7VbjhzJsrCt4uDtHjijXF+N3z0z19xahWBIZzc0v0V3bAiQ9iyUJFA
2dNHvzm0doOD50738XUE2uqVdF1idYOUgKCGnB6BFS0+/NnbeyBuf9cOGxsC
nQyUxQote8Dx0LHtlEMEzj1vlKk42gNZn9cU2B8jcLOPujbpag+4GG/on3cj
MF2sz2F5RQ9IDmu1K4QSaBLwwFWhtQfYKxAGIwkkkcFLjdkDlBUJ5Y/vEij5
JjnCXJAEV7RCP+U/IjBy/5G3gZYkWHpBzO59LoFr3guW3ThKgpdmxozCfAI/
yxV+iztPgtSLlvLJRQTODK/ozo0hQbG8wZE1Xwh0u13PT2shgcwBSgz7B6/+
FRdK6+kkSJFasn7gJ4EHH4t6Fk2S/u/3f+VdBBq9PNARtbIXdg1pbNGgEShR
2/Fyq20vnFTzVZwZI3DpgctOq0/2QsgfWS2dSQK5nbLiwhd74Vx+cogdi8Dh
wePBtPu9EOvsV2o/T2C5ENP67o9ecHorFGQhyMX3sTcWBdB6gfpc3rdeiIuv
pDeUuPzuhfLcRU7blnHxoar76m0ryFCpqtpVK8bFO3nL2levJgOsc7GfWMHl
vbte3xHWIcPnQ65PueJcdLeY+EP7jwzMr7N2nau4eKL5fvb3E2R4b5Nf+FyG
i4eObD5e7E2GT3lXiw7KcdGS2rYi7ToZvr4JsRqT56KJm3/V3Vgy6Nl3efso
cnHrxKorAalkKJ4rlupV4qJ6YKn2yTwy3NtuuUVnNRelbi0kbmsmw4agk4Vx
a7kovDzZag2VDAWGJxelqnDx3yNjPpEJMggoL3kRv46L00q0ohkuGY7YP79z
aT0Xf2WFedDFKKDtHpS3fQMX6doqyg1KFGgzGVo6yOOO4sq2Ym0KVMpbxIao
cvG78dnbacYUkE+d3srhcUW1kFG0DQUEmhxYpzZyscTm1WSAMwWUV5LwHY9f
d+zLOulFAbb+aNwQj9OcR49aXaOAezCfs5AaFxMHYpbr36OAUGiCvBiPY7w2
Va5JoUCcw8YKDm99+MyPyyJvKWBz22R3G48Dr13SYn+mQKjg2ZQ4HnsulmTQ
GylQbqj5TZ/HrveKHjWQKXBGbGNOFa8+h1VH9peMUWARiWVpyGPrlNm/aQQF
koL1njzmnc98w9PCaFEq7LSMukfm6WHw1tA9UJEK25QyVy/jsfY2suIpLSrE
O2zdo8TTT6X8WquVERX8eyenZXn6yu5ZfUvfmgp+qxI3EGu4uLypwnCtExXm
iYGmGp4/Aoddf4t4UiFH+lV/kDIX58gCmeyrVCgLzDkpwfNz4kyWIyOaCvsr
PxvEK3Cxb8xCrDGJCj/0P57m8Pqj23/4a8lrKrikh3bvl+ViZaSmZkwDFY5k
zQQ/l+Ki4b9Haaq9VBCI8PuRJ8Hr5yt80l9/UaF6ptQseyUX0707+NjLaJCw
8omzjSgX5UcgME6OBmuDzNnE//v7dO6ohjoNOJyWuwlLuBjhGNrpYkkDqTN/
bl7l5+JC24jVggMN0sY+9X7/R6Cvjf3XhHM0MKf2ivBzCXQ1V39Tf4sGp7Rq
ezbOEmiu9TN8SzUNWj6t3W37i8CP2cazTe00OLNoXyRlkJdHa195uvfz9v+Q
5WTXR+DK6C+vmxfRYfNt++KpXgL5wuITBdbSQTBQaJ1YI+/+l1u2tqjR4Wev
nllnLYFBC1yRVF06eCt9L7lVSeCkv3u4gSkdQlQN76R8JJDuYezp5UKHrvVH
Bl68JFDx5VS24Tk6bIoYoWWmE+jY/5KxxIcOnPTAqdgUAltOSDikX6fDUWlt
U9l4Xr4eGjLrSqFDbNfizL8hBBJxySGZWXTYrm8UueMygQbNB0svvaVDTrOj
yfFLBL6z/KwlWk6HznsZaw+dJfC58QMZMzId9N/Y/JC05uVpsIXd8n465L1w
zoncQ6B0GSemd5QOQz0v1pBNCIzVc+MP5NDBdrSrzmQzgdc37hzPlWeA7dZc
nTYpAk+ID3yTOsqAjHTSoAZvfgg+a5+OPsWAd3rxGgeaOZirUqUqcJ4B23PS
/9lXc3B2S8bdP8EM+K50bMfiQt68O3LKrjmZAWrnp8bZMRysTKIwbtMZMNOh
GSOzk4Pn1zdJ/htmgE+uSoGtLgdXvv28J/APAzSOOfec38BBpy9JOWf4mRA4
oCduzpuXbPrRS2brmXBy1zadq4wFVFPt5OOcY4L816U1K8MWsDmvWs/3IhNC
ysI3HvFbwIDtxWdGgphwYd5cKMRtAb9ZJtR1RTHBe9BEwcN6AY9fsIsres0E
uwO232qlFzD2XfNq799M0AitkovLmkeWYa0JI7APXhV52ci8nsOaQ+/21F7v
g6t/16++lsR7f3g+tX57qw8G9obn10TPoUnqhWNXEvvAN3fvjKDnHN5dtDJQ
vKQP3lfZBmprzqFKneNbs5k+uKQ356WeOYsHD/9SSPfrh4nXr+6+DGPjeu+f
Kneu9kOhj8CTYC82sm99Vve+0Q+PrO980D3GxuSy2O2G8f3wTil0g8UWNg4r
bDnU9r4f3sily63qn8Ew5tW7/FP9oPKZZQ2mM5jvIzbvenEA7LV8pLOYLBz7
qTs7FTQATT1ctYF6FmoY2M9EhA+A94aER/wFLMzkS/qT/nAArNz2uXdcZ+Gz
B2q/mEUDMPZbxI0ky8LIwl29rvMDINKk6u9sMYXHZq+Uu0YMgt9vhsvG25P4
+HjKp6m7g+Alk+G/7PwktmPFh4j4QZC/6nawznoSD9xZUpKeOQgm/aaHyOKT
uFvuUR6zZhDyLorJfdz6G3V2vnvuKjIEtsp5OiH7xlEwdDDcNWEIVAp6nJuM
R9DbT+DwqeQhMPx147L6v2HsPrdG7WTmEMyVNHjurRjGN7bHmp2LhqB528fu
OrNhtFdplj/aPgSMATlgmA1hRnVx4QGpYbj/NKnijP4AmoveHDBKGIb1CjGP
UybpGP503T6ZhBGgzh+vF8pqRq0lWcR40giwZ4sKV/k28fJQ9V1VxgiEHSfb
bTFpxE226jK+hSOw3j7n1bOf9UgS0hlobBuBxDvpsXKsKtzqbxgeIf4LQnzi
WvOXleDgfwc/jMf+gouSDTUgVwhWgqHqVVGj0J45JKXxlQR5+7y6J3LGYSrR
SvWP/jQYPMPq5qzfQIToaLecXmSa59pmKj04CV9F96fEWgmbuq2x1zSb/gMZ
LiJ7G/+Jmxq0kQOFwqagUiSqdOCDlOn/AMa+kmo=
        "]]},
      Annotation[#, "Charting`Private`Tag$22407#3"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {-4.573279674711402, 
      5.1815403630634504`}}, {{-1.5707963267948966`, 
     1.5707963267948966`}, {-4.573279674711402, 5.1815403630634504`}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.7077772029657655`*^9, {3.7077772648246746`*^9, 3.707777294821928*^9}, {
   3.707777396426956*^9, 3.7077774041734247`*^9}, {3.7077774366775093`*^9, 
   3.7077774561482964`*^9}, 3.707777727938837*^9, 3.7077822773490057`*^9, 
   3.7077823205340433`*^9, 3.707782399685649*^9, 
   3.7077824896268253`*^9},ExpressionUUID->"0c2c8174-ab3a-4465-abac-\
a6f8742f5069"]
}, {2}]],

Cell["\<\

\
\>", "Text",
 CellChangeTimes->{
  3.7077825487260103`*^9},ExpressionUUID->"e084fe1f-57da-4826-adbc-\
9cd8d66460dc"],

Cell["Run the following input cell to check your answer:", "Item",
 CellChangeTimes->{{3.707776208772613*^9, 
  3.707776252533052*^9}},ExpressionUUID->"10c3d928-3fb2-46ed-87f6-\
5c1cfe5a1633"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "g"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], 
   RowBox[{"Sin", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "3"]}], 
    RowBox[{"Cos", "[", "x", "]"}]}], "+", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "'"}], "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"g", "''"}], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{"-", "\[Pi]"}], "2"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7077771658844595`*^9, 3.7077774552626824`*^9}, {
  3.7077775305970592`*^9, 3.7077775439832325`*^9}, {3.707777649635584*^9, 
  3.7077776527907743`*^9}, {3.707782332344448*^9, 3.7077823404661837`*^9}, {
  3.707782405967106*^9, 3.7077824123636436`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"52063977-7cf8-4a1d-a67d-e455bda9673f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "''"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5df7eb51-c418-4873-87f3-fa64c9aac64d"],
 " and Concavity of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "88c08316-d755-4361-8987-d6f126bb283c"]
}], "Section",
 CellChangeTimes->{{3.707999433762065*^9, 
  3.707999461656869*^9}},ExpressionUUID->"b1b8e752-f60a-4386-831b-\
81f01ff7e14d"],

Cell[TextData[{
 "The graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7c6e45a1-4684-4f63-a2df-b7e8648553f0"],
 " is ",
 StyleBox["concave up",
  FontWeight->"Bold"],
 " if a tangent line is below the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e16b59e9-03ac-4533-9c39-0c6da439d0b4"],
 ", like ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3f3a613a-f3a7-4500-b18b-3f21868e1175"],
 ".\nThe graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7f3231bc-8d4e-442f-afbe-070bd92c0900"],
 " is ",
 StyleBox["concave down",
  FontWeight->"Bold"],
 " if a tangent line is above the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b382b0b0-7b76-4b67-bb79-f69a39cb5b03"],
 ", like ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7f2db847-fcd3-487a-b3f0-959d2ae4560f"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.7079999667832966`*^9, 3.7080000395757637`*^9}, {
  3.7080000724678946`*^9, 3.7080001196534543`*^9}, {3.7080012812441278`*^9, 
  3.7080012850978646`*^9}},ExpressionUUID->"f2b13768-3658-4d20-8385-\
eb0780bc357f"],

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}]}], "]"}]}], "}"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7080001485865364`*^9, 3.708000218569396*^9}, {
  3.708000256250527*^9, 3.7080002721360536`*^9}, {3.708000331955619*^9, 
  3.7080003859580307`*^9}, {3.7080005533991776`*^9, 
  3.708000617689757*^9}},ExpressionUUID->"401d1422-5486-4571-bdc6-\
dfd076337ad8"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag$6415#1"]& ]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-2.9999998775510206`, 2.9999998775510206`}, {-3, 3}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
      GraphicsBox[{{{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1: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
usZN9RkTJVLh99D1/FXy///wfwBkPo6s
            "]]},
          Annotation[#, "Charting`Private`Tag$6456#1"]& ]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-2.9999998775510206`, 2.9999998775510206`}, {-3, 3}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, 
    StyleBox[InsetBox[
      StyleBox[Cell[TextData[{
        "Graph of ",
        Cell[BoxData[
         FormBox[
          RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
         "48dbba45-12a7-4d74-943e-01ff3fbda46b"],
        " is concave UP"
       }],
        GeneratedCell->False,
        CellAutoOverwrite->False,
        CellBaseline->Baseline,
        TextAlignment->Left,ExpressionUUID->
        "368b7cd1-6718-4f43-8011-33f18e6c2dad"],
       TextAlignment->Center,
       TextJustification->0,
       FontFamily->"Times",
       FontWeight->Plain], {205.1627329035301, -191.85962732501878}, {
      Left, Baseline},
      Alignment->{Left, Top}],
     FontColor->Hue[0.6666666666666666, 0.6666666666666666, 1.]], 
    StyleBox[InsetBox[
      StyleBox[Cell[TextData[{
        "Graph of ",
        Cell[BoxData[
         FormBox[
          RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
         "2bc41801-3104-4d2d-b88b-95c22dfccee1"],
        " is concave DOWN"
       }],
        GeneratedCell->False,
        CellAutoOverwrite->False,
        CellBaseline->Baseline,
        TextAlignment->Left,ExpressionUUID->
        "c0087ec7-b234-43c6-abf0-f7d637f17bd3"],
       TextAlignment->Center,
       TextJustification->0,
       FontFamily->"Times",
       FontWeight->Plain], {373.3714281109184, -66.16521738058947}, {
      Left, Baseline},
      Alignment->{Left, Top}],
     FontColor->Hue[0.6666666666666666, 0.6666666666666666, 1.]], 
    {Hue[0., 0.6666666666666666, 1.], AbsolutePointSize[8.22242649947071], 
     PointBox[{225.49565173566816`, -103.13416147440188`}]}, 
    {Thickness[0.006237348354824191], Dashing[{Small, Small}], StrokeForm[{
     Hue[0., 0.6666666666666666, 1.], Opacity[1.]}], EdgeForm[{GrayLevel[0.], 
     Opacity[1.]}], EdgeForm[None], 
     LineBox[{{184.82981323247435`, -136.40621115883306`}, {
      268.00993744355264`, -73.55900619935176}}]}, 
    {Thickness[0.006237348354824191], Dashing[{Small, Small}], StrokeForm[{
     Hue[0., 0.6666666666666666, 1.], Opacity[1.]}], EdgeForm[{GrayLevel[0.], 
     Opacity[1.]}], EdgeForm[None], 
     LineBox[{{499.5279498310538, -159.97391301863877`}, {
      582.708074042132, -97.12670805915747}}]}, 
    {Hue[0., 0.6666666666666666, 1.], AbsolutePointSize[8.22242649947071], 
     PointBox[{544.3527945448016, -126.70186333420747`}]}, 
    {Hue[0., 0.6666666666666666, 1.], AbsolutePointSize[8.22242649947071], 
     Thickness[0.006237348354824191], Arrowheads[{{0.04, 1, {
         GraphicsBox[{
           EdgeForm[None], 
           Dashing[{}], 
           PolygonBox[{{-1, 0.5}, {0, 0}, {-1, -0.5}}]}], 0.98}}}], 
     StrokeForm[{Hue[0.6666666666666666, 0.6666666666666666, 1.], Opacity[
     1.]}], EdgeForm[{Hue[0., 0.6666666666666666, 1.], Opacity[1.], Thickness[
     0.006237348354824191], Dashing[{Small, Small}]}], EdgeForm[None], 
     FaceForm[None], 
     ArrowBox[{{332.7055896077246, -165.05714283153787`}, {
      233.81366415677599`, -108.67950308847378`}}]}, 
    {Hue[0., 0.6666666666666666, 1.], AbsolutePointSize[8.22242649947071], 
     Thickness[0.006237348354824191], Arrowheads[{{0.04, 1, {
         GraphicsBox[{
           EdgeForm[None], 
           Dashing[{}], 
           PolygonBox[{{-1, 0.5}, {0, 0}, {-1, -0.5}}]}], 0.98}}}], 
     StrokeForm[{Hue[0.6666666666666666, 0.6666666666666666, 1.], Opacity[
     1.]}], EdgeForm[{Hue[0., 0.6666666666666666, 1.], Opacity[1.], Thickness[
     0.006237348354824191], Dashing[{Small, Small}]}], EdgeForm[None], 
     FaceForm[None], 
     ArrowBox[{{525.8853504251679, -72.85933266438678}, {
      543.5574384326412, -120.01346295147098`}}]}},
   ContentSelectable->True,
   ImagePadding->{{125.510753, 126.177419}, {0.666667, 0.}},
   ImageSize->{537.3333333333314, Automatic},
   PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
   PlotRangePadding->Automatic], TraditionalForm]], "Input",
 CellChangeTimes->{{3.708000876420847*^9, 3.7080010075594625`*^9}, 
   3.7080010876163087`*^9, {3.708001120966832*^9, 3.7080011681954966`*^9}, {
   3.7080012155761495`*^9, 
   3.7080012527889204`*^9}},ExpressionUUID->"e8d45ea1-f255-4a98-86a9-\
9be3bb4a7234"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    SuperscriptBox["x", "2"], 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "/", "2"}], "]"}], "/", "10"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Pi]"}], ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7080015923368826`*^9, 3.7080016136119595`*^9}, {
  3.7080016979140477`*^9, 3.708001778359288*^9}, {3.7080018369661865`*^9, 
  3.708001845605394*^9}, {3.708002042333205*^9, 3.7080021012441673`*^9}, {
  3.7080021666683474`*^9, 3.708002167159716*^9}, {3.708002286869384*^9, 
  3.708002404919491*^9}},ExpressionUUID->"54f50acc-401b-44cd-ac69-\
86a30e9cf50f"],

Cell[BoxData[
 FormBox[
  TemplateBox[{GraphicsBox[{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$7602#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtmnk0Vd/7x81Dhoz3XDJEkUpIlIR9yJCpQpkyVFTIUDKFZCZTQiQiMqWi
MuRTsQ+JDJnuSRqpJMl47zFd0+/81vr+c+96rbPu3s9+P+/3s88fV+6sn/U5
NhYWljDy4/+/zUwFD6/ISWD/4HSM6hYCHKoLn+WRkcA2EJtELRkCKMv9u0eR
lMCk013eHpAjgOBy+9JeEQlsU5zFHHUHAforoqo82CQwY9HgI+fVCdAiNnsq
aJ2KKa1MmcppEuB5pAtvLJOKHU/enTVwgABZ9ofcC+lUrC7Gko+qSwB7nnmJ
wZ9UTNtaE6qYEMA0wK3913cq9tKiXz/flADaI/0Bc5+pGPJEQ4bFggBSDVW9
/DQq9nCP2FTlcQKMXPCIO/yGin2uM5VLdSDAhfYvs08fUDHBZf/hOE9y/X1m
BU2FVMzurj+/40UCHClsMO/Oo2IH1QZebPchwK7g22V/MqnYSdejmfcuEWBa
8ZiTTCwVW+wwKJIOJsBwRiOvciQV0/JR5ywLIUDf+u4XB8Op2C830ZXtoeT5
BnlETgZQsX8mz8q4rhEgKL6lPdmdiuHfLA0dosl66GqBuaep2NXOoojsGLIe
l0L5cicq1vLSwrUzljzf/vBrLSeomEYXVYaSQIDdxRO7+o5TsR1FoawqieR5
BR2GvllQscmftbd1bhBg7bfmvmVDKiYM7b7oJpP1WpWMcOlTMZkFyQy1FAJ8
bxRJE9OlYqM9FzkkUwmA3Z4ZV9WkYqaraYr9aQR4xuqSrbuXii3nf/hScJMA
xT7dh833UDGOgAw7t3QCxBo9LDivQMWafEKf9N0if58celxWjtQ709M2IYMA
q/3mbENSVMxkRlFzXyYBtKjStelUKkZ8MbbESb7iMn3OVIyKSQqeLfbKIkBV
CUTYhKhYdrq41gLJExPpHS/5yP2b2USCbxNAce/ZsCvcVGzcqnffFMlng/ft
UWanYt56CkX22QQoaOQYHl1HMO3+587/kfyJfTD9HhPBNt3b5bM5hwBiZuUG
tgsINhx6mOZI8vH0EEKQjmDWCQ2ZeSSnDJqWtU8h2HdZ0+f9JL+T2mIf+RfB
do40qK+RzOE2yXvwN4IZFPZSZe4QADxsfDU3gmB0bwcPDZJDZ9J8Kr8i2GKa
ogJKcr3maVm3IQSzjOCz0SeZHra3fwuOYG6jI/MHSFZpYYvBexHM806M8HaS
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
           "]]}, Annotation[#, "Charting`Private`Tag$7602#2"]& ]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-6.283185050723043, 6.283185050723043}, {-2, 2}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
        RowBox[{"f", "(", "x", ")"}], 
        RowBox[{
          SuperscriptBox["f", "\[Prime]\[Prime]", MultilineFunction -> None], 
          "(", "x", ")"}]}, "LineLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                TagBox[#, HoldForm], ",", 
                TagBox[#2, HoldForm]}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.7080023884085817`*^9, 
  3.7080024071493907`*^9}},ExpressionUUID->"66cc5a7c-8d05-47a1-b653-\
006cee0c2ffa"]
}, {2}]],

Cell[CellGroupData[{

Cell["Connections:", "Subsubsection",
 CellChangeTimes->{{3.7080025561667967`*^9, 
  3.7080025581892323`*^9}},ExpressionUUID->"bd4b6204-59ac-4246-bbf0-\
d47dbe6f7b6d"],

Cell[TextData[{
 "When the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "bdaa0feb-82d4-4c6f-99b3-6c001511db85"],
 " is concave UP, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], ">", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "98981df2-0392-4c9d-8447-7de0c0a8dd85"],
 " and the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "''"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "975702ca-d479-4fbe-a6c5-5768f26bf74e"],
 " is above the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4fa0ae89-7c47-4545-84de-b7b9fcd60c2c"],
 "-axis."
}], "Text",
 CellChangeTimes->{{3.7080024899415083`*^9, 3.7080025312663608`*^9}, {
  3.7080025631127276`*^9, 3.708002564201526*^9}, {3.7080026043095827`*^9, 
  3.7080026647438145`*^9}},ExpressionUUID->"ba9669b6-d9fd-454d-b951-\
9bc36300b05a"],

Cell[TextData[{
 "When the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3e7b3862-8140-445a-8f60-6368c15a4151"],
 " is concave DOWN, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], "<", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6565b120-d2fb-423e-b90e-cdfc3f6a9c2d"],
 " and the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "''"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c869485a-2528-456e-bf63-8faa086023dd"],
 " is below the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "95d777c2-b562-452c-bdf6-d282900ab3c3"],
 "-axis."
}], "Text",
 CellChangeTimes->{{3.7080024899415083`*^9, 3.7080025312663608`*^9}, {
  3.7080025631127276`*^9, 3.708002564201526*^9}, {3.7080026043095827`*^9, 
  3.708002683362315*^9}},ExpressionUUID->"dbeacbd8-1760-4e57-a00f-\
bbfdd664b4d6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Authorship Information", "Section",
 CellChangeTimes->{{3.7082515744934187`*^9, 
  3.7082515839141483`*^9}},ExpressionUUID->"c148749f-b4f5-4b9a-a5e5-\
367d8bf5e1de"],

Cell["\<\
Dan Uhlman
uhlmand@tas.tw\
\>", "Text",
 CellChangeTimes->{{3.708251614008443*^9, 
  3.7082516207586718`*^9}},ExpressionUUID->"72042dd9-d2e0-46f3-9e03-\
eadd089bd17e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1344, 1008},
WindowMargins->{{17, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 150, "Title", "ExpressionUUID" -> \
"addc02d8-9403-4bf9-ae5c-f542843a997c"],
Cell[CellGroupData[{
Cell[767, 29, 581, 18, 107, "Section", "ExpressionUUID" -> \
"0d5d45cc-cb1d-436b-8955-b7e6cd1f014b"],
Cell[1351, 49, 436, 11, 46, "Text", "ExpressionUUID" -> \
"5f3ea941-e425-4b06-9651-762ecf9f57c5"],
Cell[1790, 62, 334, 7, 68, "Item", "ExpressionUUID" -> \
"25cade33-0006-4210-abd9-b8f61275d589"],
Cell[CellGroupData[{
Cell[2149, 73, 2050, 55, 201, "Input", "ExpressionUUID" -> \
"d8096419-93eb-4f76-9056-a74fced85b34"],
Cell[4202, 130, 2601, 54, 501, "Output", "ExpressionUUID" -> \
"dcaffefa-ec39-4396-893d-702e9121acf7"]
}, {2}]],
Cell[6815, 187, 518, 16, 46, "Text", "ExpressionUUID" -> \
"357e5c42-d489-4f96-b937-85c3ecdbd237"],
Cell[7336, 205, 429, 6, 42, "Item", "ExpressionUUID" -> \
"aaf4e503-49ce-47ef-890f-2bb0964417f7"],
Cell[7768, 213, 1577, 43, 127, "Text", "ExpressionUUID" -> \
"30c16b72-7576-462d-96f4-6bec71ef8ea7"],
Cell[CellGroupData[{
Cell[9370, 260, 820, 22, 114, "Input", "ExpressionUUID" -> \
"5178c417-3922-451c-ab3b-0e7f878ee78f"],
Cell[10193, 284, 25949, 485, 367, "Output", "ExpressionUUID" -> \
"081704de-c1ea-4e04-a34b-f1d002828cae"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36188, 775, 539, 14, 107, "Section", "ExpressionUUID" -> \
"c0740281-9e6b-41ec-9a4d-b493f7323dde"],
Cell[36730, 791, 1455, 45, 75, "Text", "ExpressionUUID" -> \
"346813cb-d00f-49b6-8b92-dc02ead96053"],
Cell[38188, 838, 431, 13, 46, "Text", "ExpressionUUID" -> \
"69c11a33-6802-4799-8e80-a0bce6f80105"],
Cell[38622, 853, 712, 24, 42, "Item", "ExpressionUUID" -> \
"07e4b7dc-723e-4022-8fb7-c3b0dab80237"],
Cell[39337, 879, 379, 6, 70, "Text", "ExpressionUUID" -> \
"4a1c575c-57e4-4ddf-a593-076e3bf46806"],
Cell[39719, 887, 688, 21, 42, "Item", "ExpressionUUID" -> \
"13c63a4c-54f1-4a72-b7ad-abccd7a4f63c"],
Cell[40410, 910, 936, 26, 99, "Text", "ExpressionUUID" -> \
"712dfaa0-fadb-4130-8946-73ab876729d0"],
Cell[41349, 938, 194, 3, 42, "Item", "ExpressionUUID" -> \
"2bcba24c-11f9-4c3e-b34d-56d97981f764"],
Cell[41546, 943, 1178, 35, 129, "Input", "ExpressionUUID" -> \
"a02d28c7-cc52-478f-83bf-b37bd3d0295e"],
Cell[42727, 980, 792, 22, 75, "Text", "ExpressionUUID" -> \
"4b2d8d55-7161-4bef-9ed5-ca0350bd7dfa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43556, 1007, 207, 4, 107, "Section", "ExpressionUUID" -> \
"c1285a27-170d-4ecd-83ae-b01fde41c934"],
Cell[43766, 1013, 587, 16, 46, "Text", "ExpressionUUID" -> \
"79888f63-3398-4bf9-ad9c-1067309e11ca"],
Cell[CellGroupData[{
Cell[44378, 1033, 1156, 31, 114, "Input", "ExpressionUUID" -> \
"7fab6f71-e4fe-4e52-a3cf-8406180a5fba"],
Cell[45537, 1066, 2380, 54, 392, "Output", "ExpressionUUID" -> \
"426a0f26-de0c-4da2-8ade-36a73b0ff115"]
}, {2}]],
Cell[47929, 1123, 646, 17, 46, "Text", "ExpressionUUID" -> \
"b480b18c-d229-4e69-acf2-d186c2daeab9"],
Cell[48578, 1142, 1017, 33, 42, "Item", "ExpressionUUID" -> \
"b3160bb7-229d-4f83-b4a0-7129297e596a"],
Cell[49598, 1177, 379, 6, 70, "Text", "ExpressionUUID" -> \
"1b958751-8911-4b96-bdaf-a58580fd4935"],
Cell[49980, 1185, 1096, 33, 42, "Item", "ExpressionUUID" -> \
"d06766b4-9a29-4626-b1c6-ea657945a518"],
Cell[51079, 1220, 379, 6, 70, "Text", "ExpressionUUID" -> \
"3918db28-822a-4044-b3bc-126d6712715f"],
Cell[51461, 1228, 1150, 34, 42, "Item", "ExpressionUUID" -> \
"39693cd1-e3af-4fcd-9cca-f8f750997722"],
Cell[52614, 1264, 379, 6, 70, "Text", "ExpressionUUID" -> \
"2eee079a-d1fe-4268-a2df-e1c2649d9d4d"],
Cell[52996, 1272, 192, 3, 42, "Item", "ExpressionUUID" -> \
"879eaec8-c3b1-4417-8e09-ba88e298fd00"],
Cell[53191, 1277, 1338, 39, 129, "Input", "ExpressionUUID" -> \
"65c09764-58eb-4107-8bab-120eb1b03cfe"],
Cell[54532, 1318, 545, 12, 75, "Text", "ExpressionUUID" -> \
"2dbb10dd-a85e-4543-9e09-d6bee1a5025d"],
Cell[55080, 1332, 181, 3, 42, "Item", "ExpressionUUID" -> \
"3fc13f82-4705-40b6-ab5c-a3204adfcdb5"],
Cell[55264, 1337, 379, 6, 70, "Text", "ExpressionUUID" -> \
"f405b05b-e4ee-4418-9bb3-63731156b9bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55680, 1348, 157, 3, 107, "Section", "ExpressionUUID" -> \
"82c88815-4e9b-48af-b9cc-62bbd2809c06"],
Cell[55840, 1353, 211, 6, 46, "Text", "ExpressionUUID" -> \
"02e20d07-069c-4b7b-ba71-606876699f47"],
Cell[56054, 1361, 288, 4, 42, "Item", "ExpressionUUID" -> \
"178395ae-ea55-4723-863d-62677da3d218"],
Cell[56345, 1367, 928, 25, 127, "Text", "ExpressionUUID" -> \
"b2f41cb2-dcda-46ea-942c-188d4fe9494a"],
Cell[CellGroupData[{
Cell[57298, 1396, 827, 23, 352, "Input", "ExpressionUUID" -> \
"3a3f4906-a0b2-49ba-980a-cb14386c7fc7"],
Cell[58128, 1421, 36249, 617, 346, "Output", "ExpressionUUID" -> \
"8d0d3c93-b699-4cf1-99ab-10a07c2ecbd7"]
}, {2}]],
Cell[94389, 2041, 71, 0, 46, "Text", "ExpressionUUID" -> \
"8157e1fd-8bd7-4523-9fd1-54fd915a5b09"],
Cell[94463, 2043, 292, 4, 42, "Item", "ExpressionUUID" -> \
"d5482d60-353e-44f8-8200-acb078871ef9"],
Cell[94758, 2049, 976, 25, 127, "Text", "ExpressionUUID" -> \
"a66e4349-3e33-45e0-9fd0-a9413ca4a0d7"],
Cell[CellGroupData[{
Cell[95759, 2078, 674, 22, 310, "Input", "ExpressionUUID" -> \
"c564aa2f-84e5-4727-8a0d-1c95de5c1de8"],
Cell[96436, 2102, 38191, 649, 358, "Output", "ExpressionUUID" -> \
"0c2c8174-ab3a-4465-abac-a6f8742f5069"]
}, {2}]],
Cell[134639, 2754, 129, 6, 75, "Text", "ExpressionUUID" -> \
"e084fe1f-57da-4826-adbc-9cd8d66460dc"],
Cell[134771, 2762, 192, 3, 42, "Item", "ExpressionUUID" -> \
"10c3d928-3fb2-46ed-87f6-5c1cfe5a1633"],
Cell[134966, 2767, 1731, 50, 203, "Input", "ExpressionUUID" -> \
"52063977-7cf8-4a1d-a67d-e455bda9673f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136734, 2822, 509, 15, 107, "Section", "ExpressionUUID" -> \
"b1b8e752-f60a-4386-831b-81f01ff7e14d"],
Cell[137246, 2839, 1561, 49, 107, "Text", "ExpressionUUID" -> \
"f2b13768-3658-4d20-8385-eb0780bc357f"],
Cell[138810, 2890, 1080, 31, 50, "Input", "ExpressionUUID" -> \
"401d1422-5486-4571-bdc6-dfd076337ad8"],
Cell[139893, 2923, 17084, 328, 288, "Input", "ExpressionUUID" -> \
"e8d45ea1-f255-4a98-86a9-9be3bb4a7234"],
Cell[CellGroupData[{
Cell[157002, 3255, 1149, 33, 171, "Input", "ExpressionUUID" -> \
"54f50acc-401b-44cd-ac69-86a30e9cf50f"],
Cell[158154, 3290, 40313, 717, 375, "Output", "ExpressionUUID" -> \
"66cc5a7c-8d05-47a1-b653-006cee0c2ffa"]
}, {2}]],
Cell[CellGroupData[{
Cell[198501, 4012, 167, 3, 58, "Subsubsection", "ExpressionUUID" -> \
"bd4b6204-59ac-4246-bbf0-d47dbe6f7b6d"],
Cell[198671, 4017, 1012, 30, 46, "Text", "ExpressionUUID" -> \
"ba9669b6-d9fd-454d-b951-9bc36300b05a"],
Cell[199686, 4049, 1012, 30, 46, "Text", "ExpressionUUID" -> \
"dbeacbd8-1760-4e57-a00f-bbfdd664b4d6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200747, 4085, 171, 3, 107, "Section", "ExpressionUUID" -> \
"c148749f-b4f5-4b9a-a5e5-367d8bf5e1de"],
Cell[200921, 4090, 177, 6, 75, "Text", "ExpressionUUID" -> \
"72042dd9-d2e0-46f3-9e03-eadd089bd17e"]
}, Open  ]]
}, Open  ]]
}
]
*)

